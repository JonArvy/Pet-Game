/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InteriorGUI;

import com.sun.glass.events.KeyEvent;
import java.io.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Arvy Enriquez
 */
public class Bank extends javax.swing.JFrame {
    /**
     * Creates new form Bank
     */
    public Bank() {
        initComponents();
        hideAll();
        getData();
        File file = new File("db/players.txt");
        File filen = new File("db/temp.txt");
        String acs = "";
        try {
            FileReader fr = new FileReader(filen);
            BufferedReader br = new BufferedReader(fr);
            String data;
            String dat;
            while ((data = br.readLine()) != null) {
                dat = data;
                String [] datarr = dat.split(",");
                acs = datarr[0];
            }
        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {

        }
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            String data;
            String dat;
            while ((data = br.readLine()) != null) {
                dat = data;
                String [] datarr = dat.split(",");
                if (!(datarr[0].equals(acs))) {
                    recipient.addItem(datarr[0]);
                }
            }
        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {

        }
    }
    //USERNAME[0] GENDER[1] CHARACTER[2] STAMINA[3] HUNGER[4] MONEY[5] BANKMONEY[6] FOOD1[7] FOOD2[8]
    String transaction = "";
    //String access_acc = "";
    String acc = "";
    String username = "";
    int money = 0;
    int bankmoney = 0;

    String transfer_acc = "";
    String transfer_username = "";
    int transfer_bankmoney = 0;
    
    public void getData() {
        File file_temp = new File("db/temp.txt");
        String acc1 = "";
        try {
            FileReader fr = new FileReader(file_temp);
            BufferedReader br = new BufferedReader(fr);
            String data;
            String dat;
            while ((data = br.readLine()) != null) {
                dat = data;
                acc1 = dat;
            }
        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {

        }
        
        String[] inf = acc1.split(",");
        acc = inf[0];
        username = inf[0];
        money = Integer.parseInt(inf[5]);
        bankmoney = Integer.parseInt(inf[6]);
        updateMoney();
    }
    
    public void hideAll() {
        amount.setVisible(false);
        recipient.setVisible(false);
        accept.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deposit = new javax.swing.JButton();
        withdraw = new javax.swing.JButton();
        transferMoney = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        amount = new javax.swing.JTextField();
        accept = new javax.swing.JButton();
        recipient = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setText("Transaction:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 295, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Money");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, -1, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Note: Only money on bank can be transferred!");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Bank Money");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 130, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 130, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("To:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Amount:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        deposit.setText("Deposit");
        deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositActionPerformed(evt);
            }
        });
        jPanel1.add(deposit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 150, 30));

        withdraw.setText("Withdraw");
        withdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawActionPerformed(evt);
            }
        });
        jPanel1.add(withdraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 150, 30));

        transferMoney.setText("Transfer Money");
        transferMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferMoneyActionPerformed(evt);
            }
        });
        jPanel1.add(transferMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 150, 30));

        jButton6.setText("Go Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 150, 30));

        amount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                amountKeyTyped(evt);
            }
        });
        jPanel1.add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 210, -1));

        accept.setText("Accept");
        accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptActionPerformed(evt);
            }
        });
        jPanel1.add(accept, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, -1, -1));

        jPanel1.add(recipient, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 160, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bank.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new MainMap().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed
    public void updateMoney() {
        jLabel5.setText(money + "");
        jLabel7.setText(bankmoney + "");
        jLabel9.setText("Transaction: " + transaction);
    }
    private void depositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositActionPerformed
        hideAll();
        amount.setVisible(true);
        accept.setVisible(true);
        jLabel2.setVisible(true);
        transaction = "deposit";
        amount.setText("");
        updateMoney();
    }//GEN-LAST:event_depositActionPerformed

    private void withdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawActionPerformed
        hideAll();
        amount.setVisible(true);
        accept.setVisible(true);
        jLabel2.setVisible(true);
        transaction = "withdraw";
        amount.setText("");
        updateMoney();
    }//GEN-LAST:event_withdrawActionPerformed

    private void transferMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferMoneyActionPerformed
        hideAll();
        amount.setVisible(true);
        recipient.setVisible(true);
        accept.setVisible(true);
        jLabel2.setVisible(true);
        jLabel3.setVisible(true);
        transaction = "transfer";
        updateMoney();
    }//GEN-LAST:event_transferMoneyActionPerformed

    private void amountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountKeyTyped
        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACKSPACE) || (vchar == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_amountKeyTyped

    private void acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptActionPerformed
        try {
            if (amount.getText().isEmpty() == false) {
                 if (Integer.parseInt(amount.getText()) > 0) {
                    int amnt = Integer.parseInt(amount.getText());
                    switch (transaction) {
                        case "deposit":
                            if (money >= amnt) {
                                money -= amnt;
                                bankmoney += amnt;
                                updateMoney2();
                            } else {
                                JOptionPane.showMessageDialog(this, "You don't have enough money!");
                            }
                        break;
                        case "withdraw":
                            if (bankmoney >= amnt) {
                                money += amnt;
                                bankmoney -= amnt;
                                updateMoney2();
                            } else {
                                JOptionPane.showMessageDialog(this, "You don't have enough balance money!");
                            }
                        break;
                        case "transfer":
                            if (recipient.getItemCount() <= 0) {
                                JOptionPane.showMessageDialog(this, "Invalid account!");
                            } else {
                                setMoney();
                            }
                        break; 
                    }
                    amount.setText("");
                    setMoney();
                    updateMoney();
                } else {
                     JOptionPane.showMessageDialog(this, "Invalid amount!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Invalid amount!");
            }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_acceptActionPerformed
    public void updateMoney2() {
        int amnt = Integer.parseInt(amount.getText());
        String self_user = acc.split(",")[0];
        File file_temp = new File("db/temp.txt");
        File file = new File("db/players.txt");
        
        ArrayList<String> userList = new ArrayList();
        String dat_change = "";
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            String data;
            String dat;
            while ((data = br.readLine()) != null) {
                dat = data;
                String [] datarr = dat.split(",");
                if (self_user.equals(datarr[0])) {
                    dat_change = dat;
                } else {
                    userList.add(data);
                }
            }
            String[] first = dat_change.split(",");
            String recipient = first[0] + "," + first[1] + "," + first[2] + "," + first[3] + "," +  first[4] + "," + money + "," + bankmoney + "," + first[7] + "," + first[8];
            try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                userList.forEach((user) -> {
                    pw.println(user.toString());
                });
            } catch (IOException ex) {
            }
            try (PrintWriter pw = new PrintWriter(new FileWriter(file, true))) {
                pw.println(recipient);
            } catch (IOException ex) {
            }
            try (PrintWriter pw = new PrintWriter(new FileWriter(file_temp, true))) {
                pw.println(recipient);
            } catch (IOException ex) {
            }
            JOptionPane.showMessageDialog(this, "Success!");
        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {

        }
        
        updateMoney();
    }
    public void setMoney() {
        int amnt = Integer.parseInt(amount.getText());
        String recipient_username = recipient.getSelectedItem().toString();
        String recipient_user = "";
        String self_user = acc;
        File file_temp = new File("db/temp.txt");
        File file = new File("db/players.txt");
        ArrayList<String> userList = new ArrayList();
        String dat_change = "";
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            String data;
            String dat;
            while ((data = br.readLine()) != null) {
                dat = data;
                String [] datarr = dat.split(",");
                if (recipient_username.equals(datarr[0])) {
                    recipient_user = dat;
                } else if (self_user.equals(datarr[0])) {
                    dat_change = dat;
                } else {
                    userList.add(data);
                }
            }
            
            String[] first = recipient_user.split(",");
            String[] info = dat_change.split(",");
            transfer_bankmoney = Integer.parseInt(first[6]);
            try {
                if (amnt <= Integer.parseInt(info[6])) {
                    bankmoney -= amnt;
                    transfer_bankmoney += amnt;
                    String recipient = first[0] + "," + first[1] + "," + first[2] + "," + first[3] + "," +  first[4] + "," + first[5] + "," + transfer_bankmoney + "," + first[7] + "," + first[8];
                    String self = info[0] + "," + info[1] + "," + info[2] + "," + info[3] + "," +  info[4] + "," + info[5] + "," + bankmoney + "," + info[7] + "," + info[8];
                    try (PrintWriter pw = new PrintWriter(new FileWriter(file, false))) {
                        userList.forEach((user) -> {
                            pw.println(user.toString());
                        });
                    } catch (IOException ex) {
                    }
                    try (PrintWriter pw = new PrintWriter(new FileWriter(file, true))) {
                        pw.println(self);
                    } catch (IOException ex) {
                    }
                    try (PrintWriter pw = new PrintWriter(new FileWriter(file, true))) {
                        pw.println(recipient);
                    } catch (IOException ex) {
                    }
                    try (PrintWriter pw = new PrintWriter(new FileWriter(file_temp, true))) {
                        pw.println(self);
                    } catch (IOException ex) {
                    }
                    JOptionPane.showMessageDialog(this, "You have successfully transfered !");
                } else {
                    JOptionPane.showMessageDialog(this, "You don't have enough money on bank to transfer!");
                }
            } catch (Exception er) {
                
            }
        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {

        }
        updateMoney();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bank().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accept;
    private javax.swing.JTextField amount;
    private javax.swing.JButton deposit;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> recipient;
    private javax.swing.JButton transferMoney;
    private javax.swing.JButton withdraw;
    // End of variables declaration//GEN-END:variables
}
